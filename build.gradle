buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "${mod_version}"
group= "theflogat.technomancy" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Technomancy"

minecraft {
    version = "${minecraft_version}-${forge_version}"
    runDir = ".minecraft"
}

repositories {
    maven {
        name 'Mobius Repo'
        url "http://mobiusstrip.eu/maven"
    }
    maven {
        name 'CB Repo'
        url "http://chickenbones.net/maven/"
    }
    maven {
        name 'ic2'
        url "http://maven.ic2.player.to/"
    }
    ivy {
        name 'BuildCraft'
        artifactPattern "http://www.mod-buildcraft.com/releases/BuildCraft/[revision]/[module]-[revision]-[classifier].[ext]"
    }
    ivy {
        name 'Thaumcraft'
        artifactPattern "https://dl.dropboxusercontent.com/u/47135879/[module]-[classifier]-${minecraft_version}-[revision].[ext]"
    }
    ivy {
        name 'Botania'
        artifactPattern "http://botaniamod.net/files/[classifier]/[module] [revision]-[classifier].[ext]"
    }

}

jar {
    manifest {
        attributes 'FMLCorePlugin': 'theflogat.technomancy.asm.TechnomancyCoreLoader',
                   'FMLCorePluginContainsFMLMod': 'true'    }
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
    compile "codechicken:CodeChickenLib:${minecraft_version}-${ccl_version}:dev"
    compile "codechicken:CodeChickenCore:${minecraft_version}-${ccc_version}:dev"
    compile "codechicken:NotEnoughItems:${minecraft_version}-${nei_version}:dev"
    compile "mcp.mobius.waila:Waila:${waila_version}_${minecraft_version}:dev"
    compile ("appeng:appliedenergistics2:${ae2_version}:api"){
        transitive = false
    }
    compile "net.industrial-craft:industrialcraft-2:${ic2_version}:api"
    compile name: "buildcraft", version: "${bc_version}", classifier: "dev"
    compile name: "Thaumcraft", version: "${tc_version}", classifier: "deobf"
    compile name: "Botania", version: "${bot_version}", classifier: "deobf"

}

sourceSets {
    api {
        java {
            srcDir 'src/api'
        }
    }
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
